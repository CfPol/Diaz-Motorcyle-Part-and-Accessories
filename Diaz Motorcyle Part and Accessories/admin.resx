<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAArgkAAAJNU0Z0AUkBTAIBAQUB
        AAE4AQABOAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAASADAAEBAQABIAYAASD/
        ACcAAyIBMQNJAYcDUwGqA1gBugNPAZkDOQFfAwUBBtwAA00BkwMAAf8DRQHqAwAB/wNGAYADQwF3A1cB
        wgNFAeoDAAH/AwAB/wMDAQTQAAMrAUEDIAH4CwAB/wgAAyoBPwNYAbgEAAMoATwDAAH/0AADNQHyAxIB
        FwsAAf8IAAMgAS4DWgHPCwAB/wQBzwAB/w8AAf8IAAM1AVUDVgG1CAADVgG1AzMBUc8AAf8PAAH/AyUB
        9gNaAc8DAAH/Az0BZwgAA0QBeANKAYnPAAH/EAADAgEDAxQBGxAAAzYBVwNTAafPAAH/KAADNQFWA1MB
        qc8AAf8oAANFAXwDSAGEzAADFQH7Ay4BRyQAAw4B/QMYASDMAAQCAwcB/gNWAdkYAAMqAUADAAH/A00B
        ktgAA0ABbwMAAf8DTAGRCAADBAEFAzcB8QMlAfYDBgEI5AADWQHHAwAB/wNVAbEDAAH/Ay0BRfAAAwoB
        DQM9AWj/AP8AegAEAWQAA1kBvwNZAb8DWQG/A1kBvwNZAb8DWQG/A1kBvwNZAb8DWQG/A1kBvwNZAb8D
        WQG/A1kBvwQCBAADDgESAyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAwwBEAMqAUADKgFAAyoBQAMqAUAD
        KgFAAyoBQAMqAUADKgFAFAADAwEEA0MBdwNFAeoDKQE9JAADGwEmAwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8PAAH/AzoBYAM6AWADOgFgAzoBYAM6AWADOgFgAzoBYAM6AWAD
        OgFgAzoBYAM6AWADOgFgBAEEAANZAdEYAANWAbAcAAMuAUgMAAMLAQ4DOwFjA1cBwgNQAZ8DTgGUA1cB
        uScAAf87AAH/BAEDRgF/A0YBgAMzAVADGAEgA0YBgANGAYADDQERAzkBXwNGAYADRgGABAEMAANNAeUD
        BQEGFAADHAH5AzUBVgwABAEDSQGGA1YBtQgAAxwBJwNWAdgDUgHgAyABLgQAAzoBYAM9Ae4DWAG7A1gB
        uwNYAbsDWAG7A1UBrQMSARgPAAH/OwAB/wQBAwcB/gMAAf8DUQGhAyoBPwMAAf8DAAH/AxkBIwNYAb0D
        AAH/AwAB/wQCDAAEAgNMAZADVwHWAwQBBQgAAwcBCQNBAXIDIAEtA1IB4AgAA1kB1AMMAQ8IAAMqAT8D
        RQHpAzkBXwMDAQQIAAM6AWADVwHXAzkBXgM5AV4DOQFeAzkBXgNQAZwDVQGvOAADFQEdDwAB/wQBAwcB
        /gMAAf8DUQGhAyoBPwMAAf8DAAH/AxkBIwNYAb0DAAH/AwAB/wQCFAADAgEDAzEB8wgAAw4B/AsAAf8I
        AAM7AWQMAAM6AWADWQG/EAADOgFgA1kBvxAAAzoBYANZAb8MAAMbASYDAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/A1UBrQ8AAf8EAQMHAf4DAAH/A1EBoQMqAT8DAAH/AwAB/wMZASMD
        WAG9AwAB/wMAAf8EAhsAAf8LAAH/BAADDgESA1kBxwgAAxUB+wwAAzoBYANZAb8QAAM6AWADWQG/CAAD
        LwFJA1oBxAM7AWQDIwEzDwAB/zsAAf8EAQMHAf4DAAH/A1EBoQMqAT8DAAH/AwAB/wMZASMDWAG9AwAB
        /wMAAf8EAhQAAyABLgMzAVIIAANMAZEEAAM0AVQDDAEQCAADTQGSAwwBDwgAAzoBYANZAb8QAAM6AWAD
        WQG/AyMBMwNYAbsDWAHVA1QB3gNDAewDQQFzDwAB/zsAAf8EAQMHAf4DAAH/A1EBoQMqAT8DAAH/AwAB
        /wMZASMDWAG9AwAB/wMAAf8EAhQAAyUB9hMAAf8DNQFVDAADPwFsAxEBFggAAzoBYANZAb8QAAM6AWAD
        WQG/AxMBGQM5AV4DUAGaAzoB7wNZAb4DJwE6OAADFQEdDwAB/wQBAz0B7gMAAf8DSQGGAyoBPwMAAf8D
        AAH/AxkBIwNYAb0DAAH/AwAB/wQCFAADNwHxEAADPQHuAysBQgMGAQgIAANEAXsDDQERCAADOgFgA1kB
        vxAAAzoBYANZAb8IAAMjATMDSgGKAyYBOAM7AWUMAAMbASYDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/A1UBrQ8AAf8EAQwAAyoBPwMAAf8DAAH/AxkBIwNYAb0DAAH/AwAB/wQCFAAD
        TgHmEwAB/wQCAz0B7gNBAXIDVQG0A1ABnQwAAzgBXQNZAc0DBQEGDAADOgFgA1kBvxAAAzoBYANZAb8P
        AAH/OwAB/wQBDAADKgE/AwAB/wMAAf8DGQEjA1IBqAMAAf8DNwHxBAEUAANFAekTAAH/IAADGwEmAxwB
        +QNWAbUDBwEJCAADOgFgAz0B7gNYAbsDWAG7A1gBuwNYAbsDVgHZA1ABnw8AAf9MAAMnAToDAAH/AwAB
        /wMXAR8kAANMAZEDHwEsCAADSQGGAzoBYSQAAw8BFANEAXoDWQHUA0oBiwMYASEDOgFgA1cB1wM5AV4D
        OQFeAzkBXgM5AV4DNgFXAwkBDAwAAzUB8igAAxUBHVgAAzoBYANQAeMDVgHYAxABFTAABAEDUQGeAwAB
        /wNaAcoDVgGzKAADNQHyAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/A1UBrZwABAID
        KAE8A0MBdgMXAR//AF0AAUIBTQE+BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA/8BAAL/BgAB
        +AEPBgAB4AEDBgABzQGTBgABzQGZBgAB3QGZBgAB3AEZBgAB3gF5BgAB3wH5BgAB3wH5BgABzwH5BgAB
        xwHjBgAB8QGHBgAB/AEfBgAB/gF/BgAC/wYABP8B/gP/AYABAQIAAfgBfwHAAQMBgAEBAX4B/gHgAX8B
        3wH/AYABAwGfATgBwgEBAd8B/wGAAQMBhgEZAYYBAQH/AfsBgAEDAeYB2wGeAXkBwAEDAYABAwH2AZsB
        ngFhAd8B/wGAAQMB5gGZAZ4BAQHfAf8BgAEDAe8BOQGeAQEB/wH7AYABAwHvARkBngFhAcABAwGcAQMB
        7wEDAY4BeQHfAf8BnAEDAe8BfwGGAQEB3wH/AfwBPwHmAX8BwAEBAd8B+wL/AfAB/wHwAX8B4AEDBP8B
        +AF/Cv8L
</value>
  </data>
</root>